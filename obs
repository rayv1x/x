getgenv().Obs = {
    ['Options'] = {
        Script_Key = "Luarmor_Key_Paste_Here", -- // Put luarmor key in there
        Version = "Latest", -- // Detects Table
    },
    ['Silent'] = {
        Enabled = true,
        KeyBind_Enabled = true,
        KeyBind = "P",
        HitChance = 100,
        Prediction = 0.135,
        HitPart = "HumanoidRootPart",
        NearestCursorHitPart = true,
    },
    ['Aimbot'] = { -- // Universal.
        Enabled = true,
        KeyBind = "Q",
        Prediction = 0.12,
        HitPart = "HumanoidRootPart",
        AirShot = true,
        Airshot_HitPart = "Head",
        Smoothing = false,
        Smoothness = 0.012,
        ['Easing'] = {
            Style = "Exponential",
            Style2 = "Sine",
        }
    },
    ['Shake'] = {
        Enabled = false,
        Shake_X = 5,
        Shake_Y = 5,
        Shake_Z = 5,
    },
    ['FOV'] = {
        ['Silent'] = {
            Visible = true,
            Size = 30,
            Filled = false,
            Shape = "Circle",
        },
        ['Aimbot'] = {
            Visible = false,
            Use_Fov = false,
            Size = 30,
            Filled = false,
            Shape = "Circle",
        },
    },
    ['Check'] = {
        NoGroundShots = true,
        Wall = true,
        Knocked = true,
        Crew = true,
        Grabbed = true,
        Friend = false,
    },
    ['Resolver'] = { 
        Enabled = true,
        AntiAimViewer = true,
    },
    ['Cmds'] = {
        Enabled = true,
        FOV_Type = "Silent", -- // Silent, Aimbot
        FOV_Size = "/f", -- // Fov Radius
        Predict_Type = "Silent", -- // "Silent", "Aimbot"
        Pred_Value = "!P",
    },
	['AutoPrediction'] = {
        Enabled = true,
        Ping_10 = 0.1000,
        Ping_20 = 0.1100,
        Ping_30 = 0.1200,
        Ping_40 = 0.1230,
        Ping_50 = 0.1250,
        Ping_60 = 0.1270,
        Ping_70 = 0.1330,
        Ping_80 = 0.1340,
        Ping_90 = 0.1365,
        Ping_100 = 0.1374,
        Ping_110 = 0.1400,
        Ping_120 = 0.1450,
        Ping_130 = 0.1500,
        Ping_140 = 0.1570,
        Ping_150 = 0.1590,
        Ping_160 = 0.1600,
        Ping_170 = 0.1650,
        Ping_180 = 0.1670,
        Ping_190 = 0.1805,
        Ping_200 = 0.1850,
    },
}

local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Client = LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local GetPlayers = Players.GetPlayers
local Mouse = LocalPlayer:GetMouse()
local RunService = game:GetService("RunService")
local Camera = game.Workspace.CurrentCamera
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TPservice= game:GetService("TeleportService")
local GetPlayers = Players.GetPlayers
local Mouse = LocalPlayer:GetMouse()
local Workspace = game:GetService("Workspace")
local GuiService = game:GetService("GuiService")
local CurrentCamera = Workspace.CurrentCamera
local TeleportService = game:GetService("TeleportService")
local GetGuiInset = GuiService.GetGuiInset
local Circle1 = Drawing.new("Circle")
local Circle2 = Drawing.new("Circle")
local AssistTarget,SilentTarget,IsTargetting

function WallCheck (destination, ignore)
    if (getgenv().Obs.Checks.Wall) then
        local Origin = Camera.CFrame.p
        local CheckRay = Ray.new(Origin, destination - Origin)
        local Hit = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(CheckRay, ignore)
        return Hit == nil
    else
        return true
    end
end

local WTS = (function(Object)
	local ObjectVector = CurrentCamera:WorldToScreenPoint(Object.Position)
	return Vector2.new(ObjectVector.X, ObjectVector.Y)
end)

local Filter = (function(obj)
	if (obj:IsA('BasePart')) then
		return true
	end
end)

local MousePosVector2 = (function()
	return Vector2.new(Mouse.X, Mouse.Y) 
end)




function SilentFOV()
  if not (Circle2) then
      return
  end
  Circle2.Visible = getgenv().Obs.FOV.Silent.Visible
  Circle2.Radius =  getgenv().Obs.FOV.Silent.Size * 3
  Circle2.Position = Vector2.new(Mouse.X, Mouse.Y + GetGuiInset(GuiService).Y)
  Circle2.Filled = getgenv().Obs.FOV.Silent.Filled
  Circle2.Transparency = 0.1
  Circle2.Thickness = 1
  Circle2.NumSides = 100
  Circle2.Color = Color3.fromRGB(0, 0, 0)
  return Circle2
end
RunService.Heartbeat:Connect(function() AimbotFOV() SilentFOV()end)


function AimbotFOV()
    if not (Circle1) then
        return
    end
    Circle1.Visible = getgenv().Obs.FOV.Aimbot.Visible
    Circle1.Radius =  getgenv().Obs.FOV.Aimbot.Size * 3
    Circle1.Position = Vector2.new(Mouse.X, Mouse.Y + GetGuiInset(GuiService).Y)
    Circle1.Filled = getgenv().Obs.FOV.Aimbot.Filled
    Circle1.Transparency = 1
    Circle1.Thickness = 1
    Circle1.NumSides = 100
    Circle1.Color = Color3.fromRGB(0, 0, 0)
    return Circle1
end

local ClosestPlrFromMouse = function()
    local Target = nil
    Closest = 1 / 0
    for _ ,v in ipairs(Players:GetPlayers()) do
        if (v.Character and v ~= Client and v.Character:FindFirstChild("HumanoidRootPart")) and WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character})  then
        local Position, OnScreen = Camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
        local Distance = (Vector2.new(Position.X, Position.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
        if (Circle2.Radius > Distance and Distance < Closest and OnScreen and Position) then
        Closest = Distance
        Target = v
        end
        end
    end
    return Target
end

local GetClosestBodyPart = (function()
	local ShortestDistance = math.huge
	local BodyPart = nil
	for _, v in next, game.Players:GetPlayers() do
		if (v ~= Client and v.Character and v.Character:FindFirstChild("Humanoid")) then
			for k, x in next, v.Character:GetChildren() do
				if (Filter(x)) then
					local Distance = (WTS(x) - MousePosVector2()).magnitude
					if (Distance < ShortestDistance) then
						ShortestDistance = Distance
						BodyPart = x
					end
				end
			end
		end
	end
	return BodyPart
end)



if getgenv().Obs.Aimbot.AirShot == true then
    if AssistTarget.Character.Humanoid.Jump == true and AssistTarget.Character.Humanoid.FloorMaterial == Enum.Material.Air then
        getgenv().Obs.Aimbot.HitPart = getgenv().Obs.Aimbot.Airshot_HitPart
    else
        AssistTarget.Character:WaitForChild("Humanoid").StateChanged:Connect(function(old,new)
        if new == Enum.HumanoidStateType.Freefall then
        getgenv().Obs.Aimbot.HitPart = getgenv().Obs.Aimbot.Airshot_HitPart
        else
        getgenv().Obs.Aimbot.HitPart = getgenv().Obs.Aimbot.HitPart
        end
        end)
    end
end

Mouse.KeyDown:Connect(function(Key)
    local Keybind = getgenv().Obs.Aimbot.KeyBind:lower()
    if (Key == Keybind) then
        if getgenv().Obs.Aimbot.Enabled == true then
        IsTargetting = not IsTargetting
        if IsTargetting then
        AssistTarget = NearestPerson()
        else
        if AssistTarget ~= nil then
        AssistTarget = nil
        end
        end
       end
    end
end)


if getgenv().Obs.FOV.Aimbot.Use_Fov == true then
    function NearestPerson()
        local closestPlayer
        local shortestDistance = getgenv().Obs.FOV.Aimbot.Size
        for i, v in ipairs(game.Players:GetPlayers()) do
        pcall(function()
        if v ~= game.Players.LocalPlayer and v.Character and
        v.Character:FindFirstChild("Humanoid") and WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character})  then
        local pos = CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
        local magnitude =
        (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude
        if (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude < shortestDistance then
        closestPlayer = v
        shortestDistance = magnitude
        end
        end
        end)
        end
    return closestPlayer
    end

    elseif getgenv().Obs.FOV.Aimbot.Use_Fov == false then
        function NearestPerson()
        local closestPlayer
        local shortestDistance = 1000000000
        for i, v in ipairs(game.Players:GetPlayers()) do
        pcall(function()
        if v ~= game.Players.LocalPlayer and v.Character and
        v.Character:FindFirstChild("Humanoid") and WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character}) then
        local pos = CurrentCamera:WorldToViewportPoint(v.Character.PrimaryPart.Position)
        local magnitude =
        (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude
        if (Vector2.new(pos.X, pos.Y) - Vector2.new(Mouse.X, Mouse.Y)).magnitude < shortestDistance then
        closestPlayer = v
        shortestDistance = magnitude
        end
        end
        end)
        end
        return closestPlayer
    end
end



RunService.RenderStepped:Connect(function()
    if getgenv().Obs.Aimbot.Enabled == true and AssistTarget and AssistTarget.Character ~= nil then
        if getgenv().Obs.Shake.Enabled then
        local Main = CFrame.new(Camera.CFrame.p,AssistTarget.Character[getgenv().Obs.Aimbot.HitPart].Position + AssistTarget.Character[getgenv().Obs.Aimbot.HitPart].Velocity*getgenv().Obs.Aimbot.Prediction +
        Vector3.new(
        math.random(-getgenv().Obs.Shake.Shake_X,getgenv().Obs.Shake.Shake_X),
        math.random(-getgenv().Obs.Shake.Shake_Y,getgenv().Obs.Shake.Shake_Z),
        math.random(-getgenv().Obs.Shake.Shake_Z,getgenv().Obs.Shake.Shake_Z)
        )*1)
        Camera.CFrame = Camera.CFrame:Lerp(Main,getgenv().Obs.Aimbot.Smoothness,Enum.EasingStyle.Sine,Enum.EasingDirection.InOut,Enum.EasingStyle.Bounce,Enum.EasingDirection.Out,Enum.EasingStyle.Exponential,Enum.EasingDirection.Out)
        else
        local Main = CFrame.new(Camera.CFrame.p,AssistTarget.Character[getgenv().Obs.Aimbot.HitPart].Position + AssistTarget.Character[getgenv().Obs.Aimbot.HitPart].Velocity*getgenv().Obs.Aimbot.Prediction)
        Camera.CFrame = Camera.CFrame:Lerp(Main,getgenv().Obs.Aimbot.Smoothness,Enum.EasingStyle[getgenv().Obs.Aimbot.Easing.Style],Enum.EasingDirection.Out)
        end
    end
end)

RunService.Heartbeat:Connect(function()
        if getgenv().Obs.Aimbot.Enabled == true and AssistTarget and AssistTarget.Character ~= nil then
        if getgenv().Obs.Checks.Knocked then
        if AssistTarget.Character.BodyEffects["K.O"].Value then AssistTarget = nil 
        end
        end
        end
end)


local grmt = getrawmetatable(game)
local backupindex = grmt.__index
setreadonly(grmt, false)

grmt.__index = newcclosure(function(self, v)
    if (getgenv().Obs.Silent.Enabled and Mouse and tostring(v) == "Hit") then
        SilentTarget = ClosestPlrFromMouse()
        if SilentTarget then
            local endpoint = game.Players[tostring(SilentTarget)].Character[getgenv().Obs.Silent.HitPart].CFrame + (
                game.Players[tostring(SilentTarget)].Character[getgenv().Obs.Silent.HitPart].Velocity *getgenv().Obs.Silent.Prediction
            )
            return (tostring(v) == "Hit" and endpoint)
        end
    end
    return backupindex(self, v)
end)

RunService.RenderStepped:Connect(function()
    if getgenv().Obs.Aimbot.Smoothing and getgenv().Obs.Aimbot.Enabled  == true then
        local Main = CFrame.new(workspace.CurrentCamera.CFrame.p, AssistTarget.Character[getgenv().Obs.Aimbot.HitPart].Position + AssistTarget.Character[getgenv().Obs.Aimbot.HitPart].Velocity*getgenv().Obs.Aimbot.Prediction)
        workspace.CurrentCamera.CFrame = workspace.CurrentCamera.CFrame:Lerp(Main,getgenv().Obs.Aimbot.Smoothness,Enum.EasingStyle[getgenv().Obs.Aimbot.Easing.Style2],Enum.EasingDirection.Out)
    elseif getgenv().Obs.Aimbot.Smoothing == false and  getgenv().Obs.Aimbot.Enabled == true then
        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, AssistTarget.Character[getgenv().Obs.Aimbot.HitPart].Position + AssistTarget.Character[getgenv().Obs.Aimbot.HitPart].Velocity*getgenv().Obs.Aimbot.Prediction)
    end
end)


Client.Chatted:Connect(function(message)
    if getgenv().Obs.Cmds.Enabled then
        local args = string.split(message, " ")
        if args[1] == getgenv().Obs.Cmds.FOV_Size and getgenv().Obs.Cmds.FOV_Type == "Silent" and args[2] ~= nil then
            getgenv().Obs.FOV.Silent.Size = tonumber(args[2])
        elseif args[1] == getgenv().Obs.Cmds.FOV_Size and getgenv().Obs.Cmds.FOV_Type == "Aimbot" and args[2] ~= nil then
            getgenv().Obs.FOV.Aimbot.Size = tonumber(args[2])
        end
        if getgenv().Obs.Cmds.Enabled then
            local args = string.split(message, " ")
            if args[1] == getgenv().Obs.Cmds.Pred_Value and getgenv().Obs.cmds.Predict_Type == "Silent" and args[2] ~= nil then
                getgenv().Obs.Silent.Prediction = tonumber(args[2])
            elseif args[1] == getgenv().Obs.Cmds.Pred_Value and getgenv().Obs.cmds.Predict_Type == "Aimbot" and args[2] ~= nil then
                getgenv().Obs.Aimbot.Prediction = tonumber(args[2])
            end
        end
    end
end)

Mouse.KeyDown:Connect(
  function(Key)
    if getgenv().Obs.Silent.KeyBind_Enabled then
    if (Key ==  getgenv().Obs.Silent.KeyBind:lower()) then
        if getgenv().Obs.Silent.Enabled == true then
        getgenv().Obs.Silent.Enabled = false
        else
        getgenv().Obs.Silent.Enabled = true
        end
    end
  end
end
)



    if getgenv().Obs.Checks.Grabbed == true and player and player.Character then
        if player.Character:FindFirstChild("GRABBING_CONSTRAINT") then
        return true
        end
end

if getgenv().Obs.Checks.Crew == true then
while true do
local newPlayer = game.Players.PlayerAdded:wait()
if player:IsInGroup(newPlayer.Group) then
table.insert(Ignored.Players, newPlayer)
end
end
end


function TargetChecks(Target)
    if getgenv().Obs.Checks.Knocked == true and Target.Character then
        return Target.Character.BodyEffects["K.O"].Value and true or false
    end
    return false
end

local enabled = false

local function calculateVelocity(initialPos, finalPos, timeInterval)
    local displacement = finalPos - initialPos
    local velocity = displacement / timeInterval
    return velocity
end
game:GetService('RunService').RenderStepped:connect(function(deltaTime)
    if AssistTarget and getgenv().Live.Resolver.Enabled then 
        local character = AssistTarget.Character.HumanoidRootPart
        local lastPosition = character.Position
        task.wait()
        local currentPosition = character.Position
        local velocity = calculateVelocity(lastPosition, currentPosition, deltaTime)
        character.AssemblyLinearVelocity = velocity
        character.Velocity = velocity
        lastPosition = currentPosition
    end
end)


local function calculateVelocity(initialPos, finalPos, timeInterval)
    local displacement = finalPos - initialPos
    local velocity = displacement / timeInterval
    return velocity
end
game:GetService('RunService').RenderStepped:connect(function(deltaTime)
    if SilentTarget and enabled and getgenv().Live.Resolver.Enabled then 
        local character = SilentTarget.Character.HumanoidRootPart
        local lastPosition = character.Position
        task.wait()
        local currentPosition = character.Position
        local velocity = calculateVelocity(lastPosition, currentPosition, deltaTime)
        character.AssemblyLinearVelocity = velocity
        character.Velocity = velocity
        lastPosition = currentPosition
    end
end)

if getgenv().Obs.Resolver.AntiAimViewer then
	if SilentTarget then
		local ShortestDistanceV2 = math.huge
		local ClosestV2 = nil
		for i, VisibleV2 in pairs(game.Players:GetPlayers()) do
			if VisibleV2 ~= Client and VisibleV2.Character and VisibleV2.Character:FindFirstChild("Head") and VisibleV2.Character:FindFirstChild("HumanoidRootPart") then
				local PositionV2 = game.Workspace.CurrentCamera:WorldToViewportPoint(VisibleV2.Character.Head.Position)
				local DistanceV2 = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(PositionV2.X, PositionV2.Y)).Magnitude
				if ShortestDistanceV2 > DistanceV2 then
					ClosestV2 = VisibleV2
					ShortestDistanceV2 = DistanceV2
				end
			end
		end
        return ClosestV2
	elseif SilentTarget == nil then
		wait()
	end
end


	if getgenv().Obs.Checks.Friend then
		if table.find(Script.Friends, Target.UserId) then
			return nil
		end
	end
	
	
local function NoGroundShots()
	if self ~= nil and getgenv().Obs.Checks.NoGroundShots.Enabled and self.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
		local currentvelocity = self.Character.HumanoidRootPart.Velocity
		self.Character.HumanoidRootPart.Velocity = Vector3.new(currentvelocity.X, currentvelocity.Y / 0.5, currentvelocity.Z)
	end
end

NoGroundShots()

while getgenv().Obs.AutoPrediction.Enabled == true do
    local Ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    local pingNumber = string.split(Ping, " ")[1] -10
        if pingNumber < 10 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_10
        elseif pingNumber < 20 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_20
        elseif pingNumber < 30 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_30
        elseif pingNumber < 40 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_40
        elseif pingNumber < 50 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_50
        elseif pingNumber < 60 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_60
        elseif pingNumber < 70 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_70
        elseif pingNumber < 80 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_80
        elseif pingNumber < 90 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_90
        elseif pingNumber < 100 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_100
        elseif pingNumber < 110 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_110 + 0.02
        elseif pingNumber < 120 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_120 + 0.03
        elseif pingNumber < 130 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_130 + 0.04
        elseif pingNumber < 140 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_140 + 0.05
        elseif pingNumber < 150 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_150 
        elseif pingNumber < 160 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_160
        elseif pingNumber < 170 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_170
        elseif pingNumber < 180 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_180
        elseif pingNumber < 190 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_190
        elseif pingNumber < 200 then
        getgenv().Obs.Silent.Prediction = getgenv().Obs.AutoPrediction.Ping_200
    end
    wait(0.4)
end

-- credits to ray
getgenv().keytoclick = "Q"
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = keytoclick
tool.Activated:connect(function()
    local vim = game:service("VirtualInputManager")
vim:SendKeyEvent(true, keytoclick, false, game)
end)
tool.Parent = game.Players.LocalPlayer.Backpack
wait(0.2)
local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();
local Notify = AkaliNotif.Notify;
Notify({
Description = "v1x";
Title = "v1x";
Duration = 10;
})

local player = game.Players.LocalPlayer

local function connectCharacterAdded()
    player.CharacterAdded:Connect(onCharacterAdded)
end

connectCharacterAdded()

player.CharacterRemoving:Connect(function()
    tool.Parent = game.Players.LocalPlayer.Backpack
end)
